/**********************************************
 * Greed, a chess engine written in java.
 * Copyright (C) 2019 Ahmet Baþar
 * 
 * This file is part of Greed.
 * 
 * Greed is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * Greed is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with Greed.  If not, see <https://www.gnu.org/licenses/>.
 **********************************************/
package chess.gui;

import java.awt.Color;
import java.util.HashMap;

import chess.engine.EngineConstants;

public class PromotionPanel extends javax.swing.JPanel {
	
	private static final long serialVersionUID = 1L;
	private BaseGui base;
	private HashMap<Integer, PromotionCell> cellList = new HashMap<Integer, PromotionCell>();
	private byte lastChoosenPromotionItem;

	public PromotionPanel(BaseGui base){
        this.base = base;
        initComponents();
        initCells();
	}

	public void initCells() {
    	PromotionCell cell;
        int xLoc, yLoc = 0;
        Color black = new Color(122, 177, 222);
        for (int x = 0; x < 4; x++) {
        	cell = new PromotionCell( base);
        	cell.setName(String.valueOf(x));
        	cell.setCellColor(black);
        	xLoc = cell.getWidth() * x + 5;
        	yLoc = 5;
        	cell.setLocation(xLoc, yLoc);
        	add(cell);
        	cellList.put(Integer.parseInt(cell.getName()), cell);
        }
    }

    public void setItems(int side) {
        ((PromotionCell) cellList.get(0)).setItem((byte)(EngineConstants.QUEEN | side));
        ((PromotionCell) cellList.get(1)).setItem((byte)(EngineConstants.ROOK | side));
        ((PromotionCell) cellList.get(2)).setItem((byte)(EngineConstants.BISHOP | side));
        ((PromotionCell) cellList.get(3)).setItem((byte)(EngineConstants.KNIGHT | side));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }
    
    public void setLastChoosenPromotionItem(byte lastChoosenPromotionItem) {
		this.lastChoosenPromotionItem = lastChoosenPromotionItem;
	}
    
    public byte getLastChoosenPromotionItem() {
		return lastChoosenPromotionItem;
	}
}
